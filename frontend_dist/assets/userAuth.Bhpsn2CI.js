import{y as e,g as r,A as t,M as n,u as o,j as s}from"./index-2gCYdGq0.js";import{a,u as i}from"./_plugin-vue_export-helper.BGUu7VIo.js";const u=e({isLoggedIn:!1,userInfo:null,token:null,loginTime:null});function l(){const e=async()=>{try{try{const{stopUserHeartbeat:e}=i();e(),console.log("登出时停止用户心跳")}catch(e){console.warn("停止心跳失败:",e)}return o("userInfo"),o("token"),o("token"),u.isLoggedIn=!1,u.userInfo=null,u.token=null,u.loginTime=null,s({title:"已退出登录",icon:"success",duration:2e3}),{success:!0}}catch(r){return console.error("登出失败:",r),{success:!1,error:r.message}}},l=()=>{try{const t=r("userInfo"),n=r("token");if(t&&n){const r=t.loginTime||0,o=Date.now();return o-r<6048e5?(u.isLoggedIn=!0,u.userInfo=t,u.token=n,u.loginTime=r,!0):(e(),!1)}return!1}catch(t){return console.error("检查登录状态失败:",t),!1}},c=()=>"user_"+Date.now()+"_"+Math.random().toString(36).substr(2,9),g=()=>u.isLoggedIn&&u.loginTime?Math.floor((Date.now()-u.loginTime)/6e4):0;return l(),{userState:u,login:async e=>{var o;try{if(!e||!e.trim())throw new Error("请输入密码");const l=r("serverConfig");if(!(null==l?void 0:l.url))throw new Error("请先配置服务器");const g=`${l.url}/api/login`,m=a(),f=await t({url:g,method:"POST",data:{password:e.trim()},header:{"X-User-Fingerprint":m,"Content-Type":"application/json"},timeout:1e4});if(console.log("登录响应:",f),200===f.statusCode){const e=f.data.token,r=Date.now(),t={userId:c(),username:"用户",loginTime:r};n("userInfo",t),n("token",e),n("loginTime",r),u.isLoggedIn=!0,u.userInfo=t,u.token=e,u.loginTime=r;try{const{startUserHeartbeat:e}=i();e(),console.log("登录成功后启动用户心跳")}catch(s){console.warn("启动心跳失败:",s)}return{success:!0,userInfo:t,token:e,message:f.data.message||"登录成功",heartbeat_interval:f.data.heartbeat_interval||10}}throw new Error((null==(o=f.data)?void 0:o.message)||"密码错误")}catch(l){return console.error("登录失败:",l),{success:!1,error:l.message,message:l.message||"登录失败"}}},logout:e,getStoredAuth:()=>{try{const e=r("token"),t=r("userInfo");return e?{token:e,userInfo:t}:null}catch(e){return console.error("获取存储的认证信息失败:",e),null}},checkLoginStatus:l,updateUserInfo:async e=>{try{if(!u.isLoggedIn)throw new Error("用户未登录");const r={...u.userInfo,...e,updateTime:Date.now()};return n("userInfo",r),u.userInfo=r,s({title:"信息更新成功",icon:"success",duration:2e3}),{success:!0,userInfo:r}}catch(r){return console.error("更新用户信息失败:",r),s({title:r.message||"更新失败",icon:"error",duration:2e3}),{success:!1,error:r.message}}},getAvatarUrl:e=>e?e.startsWith("http")?e:`/static/avatars/${e}`:"/static/default-avatar.png",validateUsername:e=>{if(!e||!e.trim())return{valid:!1,message:"用户名不能为空"};if(e.length<2)return{valid:!1,message:"用户名至少2个字符"};if(e.length>20)return{valid:!1,message:"用户名不能超过20个字符"};return/^[a-zA-Z0-9\u4e00-\u9fa5_-]+$/.test(e)?{valid:!0}:{valid:!1,message:"用户名只能包含字母、数字、中文、下划线和短横线"}},getOnlineTime:g,formatOnlineTime:()=>{const e=g();if(e<60)return`${e}分钟`;const r=Math.floor(e/60);if(r<24)return`${r}小时${e%60}分钟`;return`${Math.floor(r/24)}天${r%24}小时`}}}export{l as u};
