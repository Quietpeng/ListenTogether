import{y as e,c as t,j as o,$ as n,g as s,s as l,u as a,z as r,A as i,B as c,C as u,r as d,o as g,D as p,E as y,G as f,b as v,w as h,i as _,d as m,e as w,f as k,t as P,p as x,q as b,F as C,m as I,H as T,J as A,a as L,k as S,l as $,K as M,S as E,h as U,L as H}from"./index-2gCYdGq0.js";import{u as R}from"./userAuth.Bhpsn2CI.js";import{_ as j,g as z,a as V,u as W}from"./_plugin-vue_export-helper.BGUu7VIo.js";const B=e({playlist:[],currentIndex:0,isPlaying:!1,isPaused:!1,currentTime:0,duration:0,volume:.8,playMode:"list",audioContext:null,backgroundAudioManager:null,hasErrorShown:!1,isLoadingAudio:!1});let F=null;const N=e({enabled:!1,wakeLock:null,audioContext:null,keepAliveTimer:null,networkTimer:null,isPageVisible:!0});const D=j({__name:"musicPlayer",setup(j){const{logout:D,currentUser:O,getStoredAuth:Z}=R(),{connectionState:J,connect:X,disconnect:G,getPlaylist:K}=W(),{playerState:q,initAudioManager:Q,playMusic:Y,pauseMusic:ee,resumeMusic:te,stopMusic:oe,playNext:ne,playPrevious:se,setVolume:le,setProgress:ae,debugServerConfig:re,clearServerConfig:ie}=function(){const e=t((()=>B.playlist[B.currentIndex]||null)),i=t((()=>B.playlist.length>0)),c=t((()=>0===B.duration?0:B.currentTime/B.duration*100)),u=e=>{e.addEventListener("play",(()=>{console.log("音频开始播放"),B.isPlaying=!0,B.isPaused=!1,n("player_state_change",{isPlaying:!0,isPaused:!1})})),e.addEventListener("pause",(()=>{console.log("音频暂停"),B.isPlaying=!1,B.isPaused=!0,n("player_state_change",{isPlaying:!1,isPaused:!0})})),e.addEventListener("ended",(()=>{console.log("音频播放结束"),B.isPlaying=!1,B.isPaused=!1,n("audio_ended")})),e.addEventListener("timeupdate",(()=>{void 0!==e.currentTime&&void 0!==e.duration&&(B.currentTime=e.currentTime,B.duration=e.duration,n("player_time_update",{currentTime:e.currentTime,duration:e.duration}))})),e.addEventListener("error",(e=>{const t=e.message||"播放失败";console.error(`音频播放错误: ${t}`),B.isPlaying=!1,B.isPaused=!1,B.hasErrorShown||(o({title:"播放失败，正在尝试下一首",icon:"none",duration:2e3}),B.hasErrorShown=!0,setTimeout((()=>{B.hasErrorShown=!1}),3e3)),B.playlist.length>1&&f()}))},d=async(t,s)=>{try{if(B.isLoadingAudio)return void console.log("音频正在加载中，忽略重复请求");if(B.isLoadingAudio=!0,B.hasErrorShown=!1,void 0!==s&&(B.currentIndex=s),t||(t=e.value),!t)throw new Error("没有可播放的歌曲");console.log("开始播放:",t.name,"-",t.artist||"未知艺术家");try{B.isPlaying&&F&&F.pause&&F.pause()}catch(l){console.warn("停止当前音频失败:",l)}let o;try{o=_(t)}catch(a){throw console.error("获取音频URL失败:",a),new Error("获取音频URL失败")}if(!o||"string"!=typeof o)throw console.error("无效的音频URL(为空或非字符串)"),new Error("无法获取有效的音频URL");if(!o.startsWith("http"))throw console.error("无效的音频URL(协议错误):",o.substring(0,30)),new Error("音频URL协议错误");F&&(F.src=o,F.autoplay=!0,F.load&&F.load(),F.play().catch((e=>{console.warn("音频自动播放被拦截:",e)}))),n("send_play_state",{action:"play",song:t,currentTime:0,timestamp:Date.now()}),setTimeout((()=>{B.isLoadingAudio=!1}),2e3)}catch(r){B.isLoadingAudio=!1,console.error("播放音乐失败:",r),o({title:r.message||"播放失败",icon:"none",duration:2e3})}},g=()=>{try{F&&F.pause(),n("send_play_state",{action:"pause",currentTime:B.currentTime,timestamp:Date.now()})}catch(e){console.error("暂停播放失败:",e)}},p=()=>{try{F&&F.play(),n("send_play_state",{action:"resume",currentTime:B.currentTime,timestamp:Date.now()})}catch(e){console.error("恢复播放失败:",e)}},y=()=>{try{F&&(F.pause(),F.currentTime=0),B.currentTime=0,n("send_play_state",{action:"stop",timestamp:Date.now()})}catch(e){console.error("停止播放失败:",e)}},f=()=>{if(0===B.playlist.length)return;let e=v();B.currentIndex=e,d(B.playlist[e])},v=()=>{const e=B.playlist.length;if(0===e)return 0;switch(B.playMode){case"random":return Math.floor(Math.random()*e);case"loop":return B.currentIndex;default:return(B.currentIndex+1)%e}},h=e=>{switch(e){case"list":default:return"列表播放";case"random":return"随机播放";case"loop":return"单曲循环"}},_=e=>{if(e.url&&(e.url.startsWith("http://")||e.url.startsWith("https://")))return e.url;try{const t=s("serverConfig");if(!t)return console.error("未配置服务器"),"";const o=m(t);if(!o)return console.error("服务器配置格式错误"),"";const n=s("token");if(!n)return console.error("未登录，无法获取音频URL"),"";let l=e.filename||`${e.name}.${e.format||"mp3"}`;l.includes("/")&&(l=l.split("/").pop()),l.includes("\\")&&(l=l.split("\\").pop()),console.log("getAudioUrl: 标准化配置 =",o),console.log("getAudioUrl: filename =",l,"song =",e);let a=o.fullUrl+"/api/music/storage/"+encodeURIComponent(l)+"?token="+encodeURIComponent(n);return console.log("构建音频URL:",a),a}catch(t){return console.error("构建音频URL失败:",t),""}},m=e=>{if(!e)return null;if(e.serverHost&&e.hasOwnProperty("useHttps"))return{host:e.serverHost,port:e.serverPort||"",protocol:e.useHttps?"https":"http",fullUrl:`${e.useHttps?"https":"http"}://${e.serverHost}${e.serverPort?":"+e.serverPort:""}`};if(e.url){let t=e.url,o="http",n="",s="";if(t.startsWith("https://")?(o="https",t=t.substring(8)):t.startsWith("http://")?(o="http",t=t.substring(7)):t.startsWith("wss://")?(o="https",t=t.substring(6)):t.startsWith("ws://")&&(o="http",t=t.substring(5)),t.includes("/")&&(t=t.split("/")[0]),t.includes(":")){const e=t.split(":");n=e[0],s=e[1]}else n=t,s=e.port||"";return{host:n,port:s,protocol:o,fullUrl:`${o}://${n}${s?":"+s:""}`}}return null};return{playerState:B,currentSong:e,hasPlaylist:i,progressPercent:c,initAudioManager:()=>{try{F||(F=new window.Audio,u(F),B.audioContext=F),console.log("音频管理器初始化成功")}catch(e){console.error("音频管理器初始化失败:",e),o({title:"音频初始化失败",icon:"error"})}},playMusic:d,pauseMusic:g,resumeMusic:p,stopMusic:y,togglePlay:()=>{B.isPlaying?g():B.isPaused?p():d()},playPrevious:()=>{if(0===B.playlist.length)return;let e=B.currentIndex-1;e<0&&(e=B.playlist.length-1),B.currentIndex=e,d(B.playlist[e])},playNext:f,setProgress:e=>{try{const t=e/100*B.duration;F&&(F.currentTime=t),B.currentTime=t}catch(t){console.error("设置播放进度失败:",t)}},setVolume:e=>{try{B.volume=Math.max(0,Math.min(1,e)),F&&(F.volume=B.volume)}catch(t){console.error("设置音量失败:",t)}},setPlayMode:e=>{["list","random","loop"].includes(e)&&(B.playMode=e,o({title:h(e),icon:"none",duration:1500}))},getPlayModeText:h,addToPlaylist:e=>{e&&(B.playlist.some((t=>t.id===e.id))?o({title:"歌曲已在播放列表中",icon:"none"}):(B.playlist.push(e),o({title:"已添加到播放列表",icon:"success"}),n("send_add_song",e)))},removeFromPlaylist:e=>{if(e<0||e>=B.playlist.length)return;const t=B.playlist[e];B.playlist.splice(e,1),e<B.currentIndex?B.currentIndex--:e===B.currentIndex&&(0===B.playlist.length?(y(),B.currentIndex=0):(B.currentIndex>=B.playlist.length&&(B.currentIndex=0),d(B.playlist[B.currentIndex]))),o({title:"已从播放列表移除",icon:"success"}),n("send_remove_song",t.id)},clearPlaylist:()=>{y(),B.playlist=[],B.currentIndex=0,o({title:"播放列表已清空",icon:"success"})},formatTime:e=>{if(!e||isNaN(e))return"00:00";const t=Math.floor(e/60),o=Math.floor(e%60);return`${t.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`},destroy:()=>{try{F&&(F.destroy(),F=null),B.audioContext=null,B.backgroundAudioManager=null}catch(e){console.error("销毁音频管理器失败:",e)}},debugServerConfig:()=>{try{const e=s("serverConfig");if(console.log("=== 服务器配置调试信息 ==="),console.log("原始配置:",JSON.stringify(e,null,2)),e){console.log("原始配置字段:"),console.log("- serverHost:",e.serverHost),console.log("- serverPort:",e.serverPort),console.log("- useHttps:",e.useHttps),console.log("- url:",e.url),console.log("- port:",e.port);const t=m(e);console.log("标准化后配置:",t);const o=_({name:"test",filename:"test.mp3"});console.log("测试构建的音频URL:",o),o.includes("mysxelfservice.gcsyweb.cbn")?(console.error("❌ 发现问题: URL中包含意外的主机地址 mysxelfservice.gcsyweb.cbn"),console.error("这可能是缓存或配置错误导致的"),l({title:"配置异常",content:"检测到异常的服务器地址，请重新配置服务器或清除缓存",showCancel:!1})):o.includes("localhost")||o.includes("127.0.0.1")?console.log("✅ 使用本地开发服务器"):console.log("✅ URL构建正常，使用远程服务器")}console.log("=== 调试信息结束 ===")}catch(e){console.error("调试服务器配置失败:",e)}},clearServerConfig:()=>{try{console.log("清理服务器配置..."),a("serverConfig"),a("token"),a("userInfo"),l({title:"配置已清理",content:"所有服务器配置和登录信息已清除，请重新配置",showCancel:!1,success:()=>{r({url:"/pages/login/login"})}})}catch(e){console.error("清理配置失败:",e)}}}}(),{enabled:ce,enableBackgroundPlay:ue,disableBackgroundPlay:de}=function(){const e=async()=>{try{return console.log("禁用后台播放模式"),s(),r(),w(),N.enabled=!1,o({title:"后台播放已禁用",icon:"success",duration:2e3}),{success:!0}}catch(e){return console.error("禁用后台播放失败:",e),{success:!1,error:e.message}}},t=async()=>{try{"wakeLock"in navigator?(N.wakeLock=await navigator.wakeLock.request("screen"),console.log("屏幕唤醒锁获取成功"),N.wakeLock.addEventListener("release",(()=>{console.log("屏幕唤醒锁已释放")}))):console.warn("当前浏览器不支持 Wake Lock API")}catch(e){throw console.error("请求屏幕唤醒锁失败:",e),e}},s=()=>{try{N.wakeLock&&(N.wakeLock.release(),N.wakeLock=null),console.log("屏幕唤醒锁已释放")}catch(e){console.error("释放屏幕唤醒锁失败:",e)}},l=()=>{try{const e=window.AudioContext||window.webkitAudioContext;e&&(N.audioContext=new e,"suspended"===N.audioContext.state&&N.audioContext.resume(),console.log("音频上下文创建成功"))}catch(e){console.error("创建音频上下文失败:",e)}},a=()=>{N.networkTimer&&clearInterval(N.networkTimer),N.networkTimer=setInterval((()=>{i({url:"data:text/plain,ping",method:"GET",timeout:3e3,success:()=>{},fail:e=>{console.warn("网络保活失败:",e)}})}),3e4),console.log("网络保活已启动")},r=()=>{N.networkTimer&&(clearInterval(N.networkTimer),N.networkTimer=null,console.log("网络保活已停止"))},d=()=>{document.addEventListener("visibilitychange",g),c((()=>{console.log("应用进入后台"),N.isPageVisible=!1,p()})),u((()=>{console.log("应用回到前台"),N.isPageVisible=!0,y()}))},g=()=>{document.hidden?(console.log("页面隐藏"),N.isPageVisible=!1,f()):(console.log("页面显示"),N.isPageVisible=!0,v())},p=()=>{N.enabled&&(h(),_(!0))},y=()=>{N.enabled&&(_(!1),N.wakeLock||t())},f=()=>{N.enabled&&h()},v=()=>{N.enabled&&N.audioContext&&"suspended"===N.audioContext.state&&N.audioContext.resume()},h=()=>{try{N.audioContext&&"suspended"===N.audioContext.state&&N.audioContext.resume()}catch(e){console.error("维持音频播放失败:",e)}},_=e=>{if(r(),N.enabled){const t=e?6e4:3e4;N.networkTimer=setInterval((()=>{i({url:"data:text/plain,ping",method:"GET",timeout:3e3,success:()=>{},fail:e=>{console.warn("网络保活失败:",e)}})}),t)}},m=()=>{N.keepAliveTimer&&clearInterval(N.keepAliveTimer),N.keepAliveTimer=setInterval((()=>{N.enabled&&n("send_heartbeat",{type:"background_heartbeat",timestamp:Date.now(),isPageVisible:N.isPageVisible})}),45e3),console.log("心跳保活已启动")},w=()=>{N.keepAliveTimer&&(clearInterval(N.keepAliveTimer),N.keepAliveTimer=null,console.log("心跳保活已停止"))};return{backgroundState:N,enableBackgroundPlay:async()=>{try{return console.log("启用后台播放模式"),await t(),l(),a(),d(),m(),N.enabled=!0,o({title:"后台播放已启用",icon:"success",duration:2e3}),{success:!0}}catch(e){return console.error("启用后台播放失败:",e),o({title:"启用后台播放失败",icon:"error",duration:2e3}),{success:!1,error:e.message}}},disableBackgroundPlay:e,checkBackgroundSupport:()=>{const e={wakeLock:!1,audioContext:!1,backgroundAudio:!1};return e.wakeLock="wakeLock"in navigator,e.audioContext=!(!window.AudioContext&&!window.webkitAudioContext),e},getStatusInfo:()=>({enabled:N.enabled,wakeLockActive:!!N.wakeLock,audioContextState:N.audioContext?N.audioContext.state:"none",isPageVisible:N.isPageVisible,networkKeepAlive:!!N.networkTimer,heartbeatActive:!!N.keepAliveTimer}),destroy:()=>{e(),document.removeEventListener("visibilitychange",g),console.log("后台播放管理器已销毁")}}}(),ge=d(!1),pe=e({playlist:[],currentIndex:0,isPlaying:!1,currentPosition:0}),ye=d(0);d(!1),d([]);const fe=d("连接中...");d(!1);const ve=d("");console.log("📊 [初始化] 在线用户数初始值:",ye.value);try{ve.value=z(),console.log("🔍 [指纹] 用户指纹:",ve.value),tt()}catch(ot){console.error("获取用户指纹失败:",ot),ve.value="unknown"}const he=d({isActive:!1,hasWakeLock:!1,audioContextState:"none",networkKeepAlive:!1,heartbeat:!1}),_e=t((()=>pe.playlist||[])),me=t((()=>pe.currentIndex||0)),we=t((()=>pe.isPlaying||!1)),ke=t((()=>_e.value[me.value]||null)),Pe=t((()=>0===q.duration?0:q.currentTime/q.duration*100)),xe=t((()=>q.currentTime||0)),be=t((()=>q.duration||0)),Ce=e=>{if(!e||isNaN(e))return"00:00";const t=Math.floor(e/60),o=Math.floor(e%60);return`${t.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`};g((async()=>{console.log("音乐播放器页面挂载开始"),console.log("📊 [初始化] 当前在线用户数:",ye.value);try{await Ie(),console.log("播放器初始化完成，开始加载播放列表"),await Te(),console.log("播放列表加载完成"),Ae(),console.log("事件监听器设置完成"),p("audio_ended",Re),console.log("音频结束事件监听已设置"),console.log("音乐播放器初始化全部完成"),console.log("📊 [初始化完成] 最终在线用户数:",ye.value)}catch(ot){console.error("音乐播放器初始化失败:",ot)}})),y((()=>{Le()}));const Ie=async()=>{try{console.log("开始初始化播放器..."),re(),Q(),console.log("音频管理器初始化完成"),await ue(),he.value.isActive=!0,console.log("后台播放启用完成");const e=s("serverConfig");if(console.log("获取服务器配置:",e),e){let t="";if(e.serverHost&&e.hasOwnProperty("useHttps")){const o=e.useHttps?"https":"http",n=e.serverHost;t=`${o}://${n}${e.serverPort?`:${e.serverPort}`:""}`}else if(e.url&&(t=e.url,t.includes("/api")||t.includes("/ws"))){const e=t.split("/");t=`${e[0]}//${e[2]}`}t?(console.log("使用服务器URL连接:",t),await X(t),fe.value="已连接",console.log("服务器连接完成")):(fe.value="服务器配置无效",console.error("无法构建有效的服务器URL"))}else fe.value="未配置服务器",console.warn("未找到服务器配置")}catch(ot){console.error("初始化播放器失败:",ot),fe.value="连接失败"}},Te=async()=>{try{console.log("开始加载播放列表...");const e=await K();console.log("播放列表数据:",e),e&&e.playlist?(pe.playlist=e.playlist,pe.currentIndex=e.current_index||0,pe.isPlaying=e.is_playing||!1,pe.currentPosition=e.current_position||0,console.log("播放列表加载成功，歌曲数量:",e.playlist.length)):console.warn("播放列表数据格式不正确:",e)}catch(ot){console.error("加载播放列表失败:",ot)}},Ae=()=>{p("play_state_change",Ne),p("playlist_update",De),p("poll_state_update",Oe),p("poll_clients_update",Ze),p("player_state_change",Ye),p("player_time_update",et)},Le=()=>{f("play_state_change",Ne),f("playlist_update",De),f("poll_state_update",Oe),f("poll_clients_update",Ze),f("player_state_change",Ye),f("player_time_update",et),f("audio_ended",Re),We(),G()},Se=async()=>{if(ke.value)try{we.value?(await ee(),pe.isPlaying=!1,q.isPlaying=!1,We()):(q.isPaused?await te():await Y(ke.value),pe.isPlaying=!0,q.isPlaying=!0,Ve()),Be()}catch(ot){console.error("播放控制失败:",ot),o({title:"播放失败",icon:"none"})}},$e=async()=>{if(0===_e.value.length)return;const e=me.value>0?me.value-1:_e.value.length-1;await Ee(e)},Me=async()=>{if(0===_e.value.length)return;const e=me.value<_e.value.length-1?me.value+1:0;await Ee(e)},Ee=async e=>{if(!(e<0||e>=_e.value.length))try{pe.isPlaying&&await oe(),pe.currentIndex=e,await Y(_e.value[e]),pe.isPlaying=!0,q.isPlaying=!0,Ve(),await Fe(e),Be()}catch(ot){console.error("播放歌曲失败:",ot),o({title:"播放失败",icon:"none"})}},Ue=()=>{if(_e.value.length<=1)return;const e=Math.floor(Math.random()*_e.value.length);Ee(e)},He=async e=>{var t;const o=Z();if(!o||!o.token)throw new Error("未登录");const n=J.serverUrl||(null==(t=s("serverConfig"))?void 0:t.url);if(!n)throw new Error("服务器地址未配置");return console.log("向服务器发送删除请求，索引:",e),console.log("服务器地址:",n),new Promise(((t,s)=>{const l=V();if(!/^[a-zA-Z0-9_-]+$/.test(l))return console.error("指纹包含非ASCII字符:",l),void s(new Error("Fingerprint contains non-ASCII characters"));i({url:`${n}/api/delete/${e}`,method:"DELETE",header:{Authorization:`Bearer ${o.token}`,"Content-Type":"application/json","X-User-Fingerprint":l},success:e=>{console.log("删除响应:",e),200===e.statusCode?(console.log("删除成功:",e.data),t(e.data)):(console.error("删除失败，状态码:",e.statusCode,"响应:",e.data),s(new Error(`删除失败: HTTP ${e.statusCode}`)))},fail:e=>{console.error("删除请求失败:",e),s(e)}})}))},Re=async()=>{if(console.log("当前歌曲播放结束，准备播放下一首"),pe.isPlaying=!1,q.isPlaying=!1,!_e.value||_e.value.length<=1)console.log("播放列表为空或只有一首歌，不执行自动播放下一首");else try{setTimeout((async()=>{await Me(),console.log("已自动切换到下一首歌曲")}),300)}catch(ot){console.error("自动切换下一首歌曲失败:",ot)}},je=e=>{try{const t=e.detail.value||0;console.log("拖动进度条到:",t+"%"),ae(t),Be()}catch(ot){console.error("设置播放进度失败:",ot)}};let ze=null;const Ve=()=>{ze&&clearInterval(ze),ze=setInterval((()=>{pe.isPlaying&&q.currentTime>0&&Be()}),5e3)},We=()=>{ze&&(clearInterval(ze),ze=null)},Be=async()=>{var e;try{const t=Z();if(!t||!t.token)return void console.warn("未登录，无法同步状态");const o=J.serverUrl||(null==(e=s("serverConfig"))?void 0:e.url);if(!o)return void console.warn("服务器地址未配置，无法同步状态");const n={current_index:pe.currentIndex,is_playing:pe.isPlaying,current_position:q.currentTime||0};if(J.websocketConnected&&"function"==typeof J.sendMessage)J.sendMessage({type:"sync_state",data:n});else{const e=V();if(!/^[a-zA-Z0-9_-]+$/.test(e))return void console.error("指纹包含非ASCII字符:",e);i({url:`${o}/api/poll/update-play-state`,method:"POST",header:{Authorization:`Bearer ${t.token}`,"Content-Type":"application/json","X-User-Fingerprint":e},data:{is_playing:pe.isPlaying,position:q.currentTime||0},success:e=>{200===e.statusCode?console.log("播放状态同步成功"):console.warn("播放状态同步失败:",e.statusCode)},fail:e=>{console.error("播放状态同步请求失败:",e)}})}}catch(ot){console.error("状态同步失败:",ot)}},Fe=async e=>{var t;try{const o=Z();if(!o||!o.token)return void console.warn("未登录，无法同步歌曲切换");const n=J.serverUrl||(null==(t=s("serverConfig"))?void 0:t.url);if(!n)return void console.warn("服务器地址未配置，无法同步歌曲切换");if(console.log("同步歌曲切换到服务器:",e),J.websocketConnected&&"function"==typeof J.sendMessage)J.sendMessage({type:"change_song",data:{index:e}});else{const t=V();if(!/^[a-zA-Z0-9_-]+$/.test(t))return void console.error("指纹包含非ASCII字符:",t);i({url:`${n}/api/poll/change-song`,method:"POST",header:{Authorization:`Bearer ${o.token}`,"Content-Type":"application/json","X-User-Fingerprint":t},data:{index:e},success:e=>{200===e.statusCode?console.log("歌曲切换同步成功"):console.warn("歌曲切换同步失败:",e.statusCode)},fail:e=>{console.error("歌曲切换同步请求失败:",e)}})}}catch(ot){console.error("歌曲切换同步失败:",ot)}},Ne=e=>{console.log("收到播放状态变化:",e),e&&"object"==typeof e&&(void 0!==e.is_playing&&(pe.isPlaying=e.is_playing),void 0!==e.current_index&&(pe.currentIndex=e.current_index),void 0!==e.current_position&&Math.abs(e.current_position-(q.currentTime||0))>10&&(q.currentTime=e.current_position),void 0!==e.connected_clients&&(console.log("📊 [WebSocket] 更新在线用户数:",e.connected_clients,"(来源: WebSocket状态更新)"),ye.value=e.connected_clients))},De=e=>{console.log("收到播放列表更新:",e),e&&e.playlist&&Array.isArray(e.playlist)?(pe.playlist=e.playlist,void 0!==e.current_index&&(pe.currentIndex=e.current_index),void 0!==e.is_playing&&(pe.isPlaying=e.is_playing),void 0!==e.connected_clients&&(console.log("📊 [播放列表] 更新在线用户数:",e.connected_clients,"(来源: 播放列表更新)"),ye.value=e.connected_clients)):Te()},Oe=async e=>{e&&"object"==typeof e&&(JSON.stringify(pe.playlist)!==JSON.stringify(e.playlist)&&(console.log("收到播放列表更新:",e.playlist),e.playlist&&Array.isArray(e.playlist)&&(pe.playlist=e.playlist)),void 0!==e.is_playing&&e.is_playing!==pe.isPlaying&&(console.log("收到播放状态更新:",e.is_playing),await Se()),void 0!==e.current_index&&pe.currentIndex!==e.current_index&&(console.log("收到当前索引更新:",e.current_index),pe.currentIndex=e.current_index,await Y(_e.value[pe.currentIndex]),pe.isPlaying=!0,pe.isPaused=!1,q.isPlaying=!0,q.isPaused=!1),e.current_position,void 0!==e.connected_clients&&(ye.value=e.connected_clients))},Ze=e=>{e&&void 0!==e.connected_clients&&(ye.value=e.connected_clients)},Je=()=>{ge.value=!0},Xe=()=>{ge.value=!1},Ge=()=>{const e=document.createElement("input");e.type="file",e.accept=".mp3,.wav,.flac,.m4a",e.onchange=Ke,e.click()},Ke=async e=>{console.log("选择的文件:",e);let t=null;if(e.target&&e.target.files&&e.target.files[0]&&(t=e.target.files[0],console.log("H5选择的文件:",t)),!t)return console.error("未找到有效文件"),void o({title:"未选择有效文件",icon:"error"});try{Xe(),T({title:"上传中..."}),await qe(t),await K(),A(),o({title:"上传成功",icon:"success"}),setTimeout((()=>{Xe()}),1500)}catch(ot){console.error("上传失败:",ot),A(),l({title:"上传失败",content:`上传失败: ${ot.message||"未知错误"}\n\n是否重新选择文件？`,confirmText:"重新选择",cancelText:"关闭",success:e=>{e.confirm||Xe()}})}},qe=async e=>{var t;const o=Z();if(!o||!o.token)throw new Error("未登录");const n=J.serverUrl||(null==(t=s("serverConfig"))?void 0:t.url);if(!n)throw new Error("服务器地址未配置");console.log("开始上传文件:",e.name||e.fileName,"大小:",e.size),console.log("服务器地址:",n);const l=new FormData;l.append("file",e);const a=V();if(!/^[a-zA-Z0-9_-]+$/.test(a))throw console.error("指纹包含非ASCII字符:",a),new Error("Fingerprint contains non-ASCII characters");const r=await fetch(`${n}/api/upload`,{method:"POST",headers:{Authorization:`Bearer ${o.token}`,"X-User-Fingerprint":a},body:l});if(!r.ok)throw new Error(`上传失败: HTTP ${r.status}`);const i=await r.json();return console.log("上传成功:",i),i},Qe=async()=>{try{l({title:"确认退出",content:"确定要退出登录吗？",success:async e=>{e.confirm&&(await D(),pe.isPlaying&&await oe(),G(),L({url:"/pages/userLogin/userLogin"}))}})}catch(ot){console.error("退出登录失败:",ot)}},Ye=e=>{console.log("收到音频控制器状态变化:",e),e&&"object"==typeof e&&(void 0!==e.isPlaying&&(pe.isPlaying=e.isPlaying,q.isPlaying=e.isPlaying),void 0!==e.isPaused&&(q.isPaused=e.isPaused))},et=e=>{e&&"object"==typeof e&&(void 0!==e.currentTime&&(q.currentTime=e.currentTime),void 0!==e.duration&&(q.duration=e.duration))},tt=()=>{try{const e=V();console.log("=== 指纹安全性测试 ==="),console.log("生成的指纹:",e),console.log("指纹长度:",e.length);const t=/^[a-zA-Z0-9_-]+$/.test(e);console.log("ASCII安全性:",t?"✅ 通过":"❌ 失败");let o=!1;for(let n=0;n<e.length;n++){const t=e.charCodeAt(n);t>127&&(console.log(`❌ 发现非ASCII字符: "${e[n]}" (码点: ${t}) 位置: ${n}`),o=!0)}return o||console.log("✅ 所有字符都在ASCII范围内"),console.log("=== 测试结束 ==="),t&&!o}catch(ot){return console.error("指纹安全性测试失败:",ot),!1}};return(e,t)=>{const n=S,s=_,a=$,r=M,i=E;return m(),v(s,{class:"music-player"},{default:h((()=>[w(s,{class:"header"},{default:h((()=>[w(s,{class:"header-content"},{default:h((()=>[w(n,{class:"header-title"},{default:h((()=>[k("音乐一起听")])),_:1}),w(s,{class:"header-actions"},{default:h((()=>[w(s,{class:"online-badge"},{default:h((()=>[w(n,{class:"user-icon"},{default:h((()=>[k("👥")])),_:1}),w(n,{class:"user-count"},{default:h((()=>[k(P(ye.value),1)])),_:1}),w(n,{class:"badge-text"},{default:h((()=>[k("在线用户")])),_:1})])),_:1}),w(a,{class:"logout-btn",onClick:Qe},{default:h((()=>[w(n,{class:"btn-icon"},{default:h((()=>[k("🚪")])),_:1}),w(n,{class:"btn-text"},{default:h((()=>[k("退出登录")])),_:1})])),_:1})])),_:1})])),_:1})])),_:1}),w(s,{class:"player-section"},{default:h((()=>[w(s,{class:"player-card"},{default:h((()=>[w(s,{class:"current-song"},{default:h((()=>[w(n,{class:"song-title"},{default:h((()=>[k(P(ke.value?ke.value.name:"暂无播放"),1)])),_:1}),w(s,{class:"status-info"},{default:h((()=>[w(n,{class:"connection-status"},{default:h((()=>[k(P(fe.value),1)])),_:1}),w(n,{class:"user-fingerprint"},{default:h((()=>[k("指纹: "+P(ve.value),1)])),_:1})])),_:1})])),_:1}),w(s,{class:"progress-section"},{default:h((()=>[w(n,{class:"time"},{default:h((()=>[k(P(Ce(xe.value)),1)])),_:1}),w(r,{class:"progress-slider",value:Pe.value,max:100,"block-size":"20",backgroundColor:"#e9ecef",activeColor:"#667eea",onChange:je},null,8,["value"]),w(n,{class:"time"},{default:h((()=>[k(P(Ce(be.value)),1)])),_:1})])),_:1}),w(s,{class:"controls"},{default:h((()=>[w(a,{class:"control-btn",onClick:$e,disabled:!_e.value.length},{default:h((()=>[w(n,{class:"control-icon"},{default:h((()=>[k("⏮")])),_:1})])),_:1},8,["disabled"]),w(a,{class:"play-btn",onClick:Se,disabled:!ke.value},{default:h((()=>[w(n,{class:"play-icon"},{default:h((()=>[k(P(we.value?"⏸":"▶️"),1)])),_:1})])),_:1},8,["disabled"]),w(a,{class:"control-btn",onClick:Me,disabled:!_e.value.length},{default:h((()=>[w(n,{class:"control-icon"},{default:h((()=>[k("⏭")])),_:1})])),_:1},8,["disabled"]),w(a,{class:"shuffle-btn",onClick:Ue,disabled:!_e.value.length},{default:h((()=>[w(n,{class:"shuffle-icon"},{default:h((()=>[k("🔀")])),_:1}),w(n,{class:"shuffle-text"},{default:h((()=>[k("随机")])),_:1})])),_:1},8,["disabled"])])),_:1})])),_:1})])),_:1}),w(s,{class:"playlist-section"},{default:h((()=>[w(s,{class:"playlist-header"},{default:h((()=>[w(n,{class:"playlist-title"},{default:h((()=>[k("播放列表 ("+P(_e.value.length)+"首)",1)])),_:1}),w(s,{class:"playlist-actions"},{default:h((()=>[w(a,{class:"upload-btn",onClick:Je},{default:h((()=>[w(n,{class:"upload-icon"},{default:h((()=>[k("⬆️")])),_:1}),w(n,{class:"upload-text"},{default:h((()=>[k("上传音乐")])),_:1})])),_:1})])),_:1})])),_:1}),w(s,{class:"playlist-content"},{default:h((()=>[_e.value.length?(m(),v(i,{key:1,class:"song-list","scroll-y":""},{default:h((()=>[(m(!0),x(C,null,b(_e.value,((e,t)=>(m(),v(s,{key:t,class:U(["song-item",{active:t===me.value}]),onClick:e=>Ee(t)},{default:h((()=>[w(s,{class:"song-info"},{default:h((()=>[w(n,{class:"song-index"},{default:h((()=>[k(P(t+1),1)])),_:2},1024),w(s,{class:"song-details"},{default:h((()=>[w(n,{class:"song-name"},{default:h((()=>[k(P(e.name),1)])),_:2},1024),w(n,{class:"song-format"},{default:h((()=>{var t;return[k(P((null==(t=e.format)?void 0:t.toUpperCase())||"MP3"),1)]})),_:2},1024)])),_:2},1024)])),_:2},1024),w(s,{class:"song-actions"},{default:h((()=>[t===me.value&&we.value?(m(),v(a,{key:0,class:"playing-indicator"},{default:h((()=>[w(n,{class:"playing-icon"},{default:h((()=>[k("🎵")])),_:1})])),_:1})):I("",!0),w(a,{class:"delete-btn",onClick:H((e=>(async e=>{if(e<0||e>=_e.value.length)return void console.error("无效的歌曲索引:",e);const t=_e.value[e];console.log("准备删除歌曲:",t.name,"索引:",e);try{l({title:"确认删除",content:`确定要删除 "${t.name}" 吗？`,success:async t=>{if(t.confirm)try{T({title:"删除中..."}),await He(e);const t=[...pe.playlist];t.splice(e,1),pe.playlist=t,e===pe.currentIndex?(pe.currentIndex>=t.length&&t.length>0&&(pe.currentIndex=t.length-1),0===t.length&&(pe.currentIndex=0,pe.isPlaying=!1,await oe())):e<pe.currentIndex&&(pe.currentIndex=pe.currentIndex-1),setTimeout((()=>{K()}),1e3),A(),o({title:"删除成功",icon:"success"})}catch(ot){console.error("删除歌曲失败:",ot),A(),o({title:"删除失败: "+(ot.message||"未知错误"),icon:"error"})}}})}catch(ot){console.error("删除歌曲失败:",ot)}})(t)),["stop"])},{default:h((()=>[w(n,{class:"delete-icon"},{default:h((()=>[k("🗑")])),_:1})])),_:2},1032,["onClick"])])),_:2},1024)])),_:2},1032,["class","onClick"])))),128))])),_:1})):(m(),v(s,{key:0,class:"empty-playlist"},{default:h((()=>[w(n,{class:"empty-icon"},{default:h((()=>[k("🎵")])),_:1}),w(n,{class:"empty-text"},{default:h((()=>[k("暂无音乐文件")])),_:1}),w(n,{class:"empty-tip"},{default:h((()=>[k("请上传音乐文件开始播放")])),_:1})])),_:1}))])),_:1})])),_:1}),ge.value?(m(),v(s,{key:0,class:"upload-dialog"},{default:h((()=>[w(s,{class:"dialog-mask",onClick:Xe}),w(s,{class:"dialog-content"},{default:h((()=>[w(s,{class:"dialog-header"},{default:h((()=>[w(n,{class:"dialog-title"},{default:h((()=>[k("上传音乐")])),_:1}),w(a,{class:"dialog-close",onClick:Xe},{default:h((()=>[w(n,null,{default:h((()=>[k("✕")])),_:1})])),_:1})])),_:1}),w(s,{class:"dialog-body"},{default:h((()=>[w(n,{class:"upload-tips"},{default:h((()=>[k("请选择音乐文件 (支持 MP3, WAV, FLAC, M4A)")])),_:1}),w(a,{class:"file-select-btn",onClick:Ge},{default:h((()=>[w(n,{class:"select-icon"},{default:h((()=>[k("📁")])),_:1}),w(n,{class:"select-text"},{default:h((()=>[k("选择文件")])),_:1})])),_:1})])),_:1})])),_:1})])),_:1})):I("",!0)])),_:1})}}},[["__scopeId","data-v-9d036609"]]);export{D as default};
